enum MediaType {
  VIDEO
  AUDIO
  TEXT
}

model Media {
  id        Int       @id @default(autoincrement())
  created   DateTime  @default(now())
  type      MediaType
  url       String
  thoughtId Int       @unique
  thought   Thought   @relation(fields: [thoughtId], references: [id])
}

model Thought {
  id              Int               @id @default(autoincrement())
  created         DateTime          @default(now())
  content         String            @db.Char(281)
  ThoughtToSphere ThoughtToSphere[]
  Emotion         Emotion[]
  Media           Media?
}

model Sphere {
  id              Int               @id @default(autoincrement())
  created         DateTime          @default(now())
  title           String            @unique
  user            User              @relation(fields: [userId], references: [id])
  userId          Int               @unique
  ThoughtToSphere ThoughtToSphere[]
}

model ThoughtToSphere {
  thoughtId Int
  sphereId  Int
  thought   Thought @relation(fields: [thoughtId], references: [id])
  sphere    Sphere  @relation(fields: [sphereId], references: [id])

  @@id([thoughtId, sphereId])
}

model Emotion {
  id        Int      @id @default(autoincrement())
  created   DateTime @default(now())
  emotion   String
  thoughtId Int
  thought   Thought  @relation(fields: [thoughtId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  spheres Sphere[]
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
